name: CI
on:
  push:
    branches:
      - "main"
  pull_request:

jobs:
  test:
    name: Python ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - 3.9
        os:
          - ubuntu-20.04
        arch:
          - x64
    
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.version }}
      
      - name: Install poetry
        uses: abatilo/actions-poetry@v2

      - name: Setup a local virtual environment
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local

      - uses: actions/cache@v3
        name: Define a cache for the virtual environment based on the dependencies lock file
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}

      - name: Install the project dependencies
        run: poetry install --with ci

      - name: Run the automated tests and generate the coverage report
        env: 
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          USER_AGENT: ${{ secrets.USER_AGENT }}
        run: |
          touch praw.ini
          echo '[bot1]' >> praw.ini
          echo 'client_id=$CLIENT_ID' >> praw.ini
          echo 'client_secret=$CLIENT_SECRET' >> praw.ini
          echo 'user_agent=$USER_AGENT' >> praw.ini
          poetry run pytest tests --cov-config=.coveragerc --cov=./ --cov-report=xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
